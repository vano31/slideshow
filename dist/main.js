"use strict";(self.webpackChunkslideshow=self.webpackChunkslideshow||[]).push([[179],{426:(n,e,t)=>{t.d(e,{Z:()=>l});var o=t(537),a=t.n(o),i=t(645),r=t.n(i)()(a());r.push([n.id,"@import url(https://fonts.googleapis.com/css2?family=Montserrat&display=swap);"]),r.push([n.id,"@media only screen and (max-width: 450px) /*Mobile View*/{\n\n* {\n\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n\n}\n\n.page {\n    display: flex;\n    flex-wrap: wrap;\n    \n}\n\n.background {\n\n    width: 100%;\n    display: flex;\n\n\n}\n\n.menu.main, .menu.sub {\n\n\n    flex-direction: row;\n    height: 80px;\n\n}\n\n.imageHolder {\n\n    align-items: center;\n    justify-content: center;\n    height: 400px;\n\n}\n\n.conveyerBelt {\n\n    height: 80px;\n    \n\n\n}\n\n.bottomSection {\n\n    flex-direction: column;\n\n}\n\n.timeDisplay {\n\n    height: 150px;\n\n}\n\n.backgroundDisplay {\n\n    height: 150px;\n\n\n}\n\n.timeDisplay {\n\n    justify-content: center;\n    align-items: center;\n\n}\n\n.backgroundDisplay {\n\n    justify-content: center;\n    align-items: start;\n\n}\n\n#imageBox {\n\n    height: 100%;\n    width: 100%;\n\n}\n\n\n}\n\n\n\n\n\n\n\n@media only screen and (min-width: 451px) /*Desktop View*/{\n\n* {\n\n\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n\n\n}\n\nbody {\n    height: 100vh;\n    width: 100vw;\n}\n\n\n\n.page {\n\n    height: 100%;\n    width: 100%;\n    display: grid;\n\n    grid-template-columns: 1fr 1fr /*12fr*/ 1200px;\n    grid-template-rows: 750px /*8fr*/ 1fr 3fr;\n}\n\n.menu.main {\n\n    display: flex;\n    flex-direction: column;\n    grid-column: 1 / 2;\n    grid-row: 1 / 4;\n    \n}\n\n.menu.sub {\n\n    display: flex;\n    flex-direction: column;\n    grid-column: 2 / 3;\n    grid-row: 1 / 4;\n    \n}\n\n.imageHolder {\n\n    grid-column: 3 / 4;\n    grid-row: 1 / 2;\n    display: flex;\n}\n\n.conveyerBelt {\n\n    grid-column: 3 /4;\n    grid-row: 2 / 3;\n    display: flex;\n\n\n}\n\n.bottomSection {\n\n    display: flex;\n    grid-column: 3 / 4;\n    grid-row: 3 / 4;\n    align-items: center;\n    justify-content: center;\n    gap: 30px;\n\n\n}\n\n\n.timeDisplay,\n.backgroundDisplay {\n\n    \n    height: 120px;\n    width: clamp(100px, 33%, 400px)  /*50px;*/\n    \n\n}\n\n.timeDisplay, .backgroundDisplay {\n\n    display: flex;\n    justify-content: center;\n    align-items: center;\n\n}\n\n#imageBox {\n\n    max-width: 100%;\n    max-height: 100%;\n\n}\n\n\n\n}\n\n/*For both Mobile and Desktop View*/\n\n* {\n\n    font-family: 'Montserrat', sans-serif;\n\n}\n\n.backgroundSquare {\n\n    width: 60px;\n    height: 60px;\n    background-color: orange;\n    border-style: solid;\n    border-color: black;\n\n}\n\n#red {\n    background-color: red;\n}\n\n#blue {\n    background-color: blue;\n\n}\n\n#green {\n    background-color: green;\n}\n\n#gold {\n    background-color: gold;\n}\n\n#silver {\n    background-color: silver;\n}\n\n/*\n#imageBox {\n\n    height: 100%;\n    width: 100%;\n\n}\n*/\n\n.conveyerBelt {\n    justify-content: space-evenly;\n}","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAEA;;AAEA;;IAEI,SAAS;IACT,UAAU;IACV,sBAAsB;;AAE1B;;AAEA;IACI,aAAa;IACb,eAAe;;AAEnB;;AAEA;;IAEI,WAAW;IACX,aAAa;;;AAGjB;;AAEA;;;IAGI,mBAAmB;IACnB,YAAY;;AAEhB;;AAEA;;IAEI,mBAAmB;IACnB,uBAAuB;IACvB,aAAa;;AAEjB;;AAEA;;IAEI,YAAY;;;;AAIhB;;AAEA;;IAEI,sBAAsB;;AAE1B;;AAEA;;IAEI,aAAa;;AAEjB;;AAEA;;IAEI,aAAa;;;AAGjB;;AAEA;;IAEI,uBAAuB;IACvB,mBAAmB;;AAEvB;;AAEA;;IAEI,uBAAuB;IACvB,kBAAkB;;AAEtB;;AAEA;;IAEI,YAAY;IACZ,WAAW;;AAEf;;;AAGA;;;;;;;;AAQA;;AAEA;;;IAGI,SAAS;IACT,UAAU;IACV,sBAAsB;;;AAG1B;;AAEA;IACI,aAAa;IACb,YAAY;AAChB;;;;AAIA;;IAEI,YAAY;IACZ,WAAW;IACX,aAAa;;IAEb,8CAA8C;IAC9C,yCAAyC;AAC7C;;AAEA;;IAEI,aAAa;IACb,sBAAsB;IACtB,kBAAkB;IAClB,eAAe;;AAEnB;;AAEA;;IAEI,aAAa;IACb,sBAAsB;IACtB,kBAAkB;IAClB,eAAe;;AAEnB;;AAEA;;IAEI,kBAAkB;IAClB,eAAe;IACf,aAAa;AACjB;;AAEA;;IAEI,iBAAiB;IACjB,eAAe;IACf,aAAa;;;AAGjB;;AAEA;;IAEI,aAAa;IACb,kBAAkB;IAClB,eAAe;IACf,mBAAmB;IACnB,uBAAuB;IACvB,SAAS;;;AAGb;;;AAGA;;;;IAII,aAAa;IACb,8BAA8B,GAAG,QAAQ;;;AAG7C;;AAEA;;IAEI,aAAa;IACb,uBAAuB;IACvB,mBAAmB;;AAEvB;;AAEA;;IAEI,eAAe;IACf,gBAAgB;;AAEpB;;;;AAIA;;AAEA,mCAAmC;;AAEnC;;IAEI,qCAAqC;;AAEzC;;AAEA;;IAEI,WAAW;IACX,YAAY;IACZ,wBAAwB;IACxB,mBAAmB;IACnB,mBAAmB;;AAEvB;;AAEA;IACI,qBAAqB;AACzB;;AAEA;IACI,sBAAsB;;AAE1B;;AAEA;IACI,uBAAuB;AAC3B;;AAEA;IACI,sBAAsB;AAC1B;;AAEA;IACI,wBAAwB;AAC5B;;AAEA;;;;;;;CAOC;;AAED;IACI,6BAA6B;AACjC",sourcesContent:["@import url('https://fonts.googleapis.com/css2?family=Montserrat&display=swap');\n\n@media only screen and (max-width: 450px) /*Mobile View*/{\n\n* {\n\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n\n}\n\n.page {\n    display: flex;\n    flex-wrap: wrap;\n    \n}\n\n.background {\n\n    width: 100%;\n    display: flex;\n\n\n}\n\n.menu.main, .menu.sub {\n\n\n    flex-direction: row;\n    height: 80px;\n\n}\n\n.imageHolder {\n\n    align-items: center;\n    justify-content: center;\n    height: 400px;\n\n}\n\n.conveyerBelt {\n\n    height: 80px;\n    \n\n\n}\n\n.bottomSection {\n\n    flex-direction: column;\n\n}\n\n.timeDisplay {\n\n    height: 150px;\n\n}\n\n.backgroundDisplay {\n\n    height: 150px;\n\n\n}\n\n.timeDisplay {\n\n    justify-content: center;\n    align-items: center;\n\n}\n\n.backgroundDisplay {\n\n    justify-content: center;\n    align-items: start;\n\n}\n\n#imageBox {\n\n    height: 100%;\n    width: 100%;\n\n}\n\n\n}\n\n\n\n\n\n\n\n@media only screen and (min-width: 451px) /*Desktop View*/{\n\n* {\n\n\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n\n\n}\n\nbody {\n    height: 100vh;\n    width: 100vw;\n}\n\n\n\n.page {\n\n    height: 100%;\n    width: 100%;\n    display: grid;\n\n    grid-template-columns: 1fr 1fr /*12fr*/ 1200px;\n    grid-template-rows: 750px /*8fr*/ 1fr 3fr;\n}\n\n.menu.main {\n\n    display: flex;\n    flex-direction: column;\n    grid-column: 1 / 2;\n    grid-row: 1 / 4;\n    \n}\n\n.menu.sub {\n\n    display: flex;\n    flex-direction: column;\n    grid-column: 2 / 3;\n    grid-row: 1 / 4;\n    \n}\n\n.imageHolder {\n\n    grid-column: 3 / 4;\n    grid-row: 1 / 2;\n    display: flex;\n}\n\n.conveyerBelt {\n\n    grid-column: 3 /4;\n    grid-row: 2 / 3;\n    display: flex;\n\n\n}\n\n.bottomSection {\n\n    display: flex;\n    grid-column: 3 / 4;\n    grid-row: 3 / 4;\n    align-items: center;\n    justify-content: center;\n    gap: 30px;\n\n\n}\n\n\n.timeDisplay,\n.backgroundDisplay {\n\n    \n    height: 120px;\n    width: clamp(100px, 33%, 400px)  /*50px;*/\n    \n\n}\n\n.timeDisplay, .backgroundDisplay {\n\n    display: flex;\n    justify-content: center;\n    align-items: center;\n\n}\n\n#imageBox {\n\n    max-width: 100%;\n    max-height: 100%;\n\n}\n\n\n\n}\n\n/*For both Mobile and Desktop View*/\n\n* {\n\n    font-family: 'Montserrat', sans-serif;\n\n}\n\n.backgroundSquare {\n\n    width: 60px;\n    height: 60px;\n    background-color: orange;\n    border-style: solid;\n    border-color: black;\n\n}\n\n#red {\n    background-color: red;\n}\n\n#blue {\n    background-color: blue;\n\n}\n\n#green {\n    background-color: green;\n}\n\n#gold {\n    background-color: gold;\n}\n\n#silver {\n    background-color: silver;\n}\n\n/*\n#imageBox {\n\n    height: 100%;\n    width: 100%;\n\n}\n*/\n\n.conveyerBelt {\n    justify-content: space-evenly;\n}"],sourceRoot:""}]);const l=r},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",o=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),o&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),o&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,o,a,i){"string"==typeof n&&(n=[[null,n,void 0]]);var r={};if(o)for(var l=0;l<this.length;l++){var d=this[l][0];null!=d&&(r[d]=!0)}for(var c=0;c<n.length;c++){var s=[].concat(n[c]);o&&r[s[0]]||(void 0!==i&&(void 0===s[5]||(s[1]="@layer".concat(s[5].length>0?" ".concat(s[5]):""," {").concat(s[1],"}")),s[5]=i),t&&(s[2]?(s[1]="@media ".concat(s[2]," {").concat(s[1],"}"),s[2]=t):s[2]=t),a&&(s[4]?(s[1]="@supports (".concat(s[4],") {").concat(s[1],"}"),s[4]=a):s[4]="".concat(a)),e.push(s))}},e}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),a="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),i="/*# ".concat(a," */");return[e].concat([i]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,o=0;o<e.length;o++)if(e[o].identifier===n){t=o;break}return t}function o(n,o){for(var i={},r=[],l=0;l<n.length;l++){var d=n[l],c=o.base?d[0]+o.base:d[0],s=i[c]||0,A="".concat(c," ").concat(s);i[c]=s+1;var u=t(A),p={css:d[1],media:d[2],sourceMap:d[3],supports:d[4],layer:d[5]};if(-1!==u)e[u].references++,e[u].updater(p);else{var m=a(p,o);o.byIndex=l,e.splice(l,0,{identifier:A,updater:m,references:1})}r.push(A)}return r}function a(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,a){var i=o(n=n||[],a=a||{});return function(n){n=n||[];for(var r=0;r<i.length;r++){var l=t(i[r]);e[l].references--}for(var d=o(n,a),c=0;c<i.length;c++){var s=t(i[c]);0===e[s].references&&(e[s].updater(),e.splice(s,1))}i=d}}},569:n=>{var e={};n.exports=function(n,t){var o=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var o="";t.supports&&(o+="@supports (".concat(t.supports,") {")),t.media&&(o+="@media ".concat(t.media," {"));var a=void 0!==t.layer;a&&(o+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),o+=t.css,a&&(o+="}"),t.media&&(o+="}"),t.supports&&(o+="}");var i=t.sourceMap;i&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),e.styleTagTransform(o,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}},914:(n,e,t)=>{var o=t(379),a=t.n(o),i=t(795),r=t.n(i),l=t(569),d=t.n(l),c=t(565),s=t.n(c),A=t(216),u=t.n(A),p=t(589),m=t.n(p),g=t(426),y={};y.styleTagTransform=m(),y.setAttributes=s(),y.insert=d().bind(null,"head"),y.domAPI=r(),y.insertStyleElement=u(),a()(g.Z,y),g.Z&&g.Z.locals&&g.Z.locals;let{page:f,menuMain:h,menuSub:C,imageHolder:b,imageBox:B,conveyerBelt:I,timeDisplay:E,backgroundDisplay:v,dropDownImage:x,dropDownColor:k,conveyerButton0:w,conveyerButton1:S,conveyerButton2:L,conveyerButton3:D,conveyerButton4:j,conveyerButtonLeft:q,conveyerButtonRight:M}=function(){let n=document.createElement("div");n.classList.add("page"),n.classList.add("background"),document.body.appendChild(n);let e=document.createElement("div");e.classList.add("menu"),e.classList.add("main"),e.classList.add("background"),n.appendChild(e);let t=document.createElement("button");t.id="dropDownImage",t.textContent="Choose Image",e.appendChild(t);let o=document.createElement("button");o.id="dropDownColor",o.textContent="Choose Color",e.appendChild(o),document.createElement("button");let a=document.createElement("div");a.classList.add("menu"),a.classList.add("sub"),a.classList.add("background"),n.appendChild(a);let i=document.createElement("div");i.classList.add("imageHolder"),i.classList.add("background"),n.appendChild(i);let r=document.createElement("div");r.classList.add("conveyerBelt"),r.classList.add("background"),n.appendChild(r);let l=document.createElement("div");l.classList.add("bottomSection"),l.classList.add("background"),n.appendChild(l);let d=document.createElement("div");d.classList.add("timeDisplay"),d.classList.add("background"),l.appendChild(d);let c=document.createElement("div");c.classList.add("backgroundDisplay"),c.classList.add("background"),l.appendChild(c);let s=document.createElement("img");s.id="imageBox",i.appendChild(s);let A=document.createElement("button");A.id="leftButton",A.textContent="Left Button",r.appendChild(A);let u=document.createElement("button");u.name="0",u.textContent="O",r.appendChild(u);let p=document.createElement("button");p.name="1",p.textContent="O",r.appendChild(p);let m=document.createElement("button");m.name="2",m.textContent="O",r.appendChild(m);let g=document.createElement("button");g.name="3",g.textContent="O",r.appendChild(g);let y=document.createElement("button");y.name="4",y.textContent="O",r.appendChild(y);let f=document.createElement("button");return f.id="rightButton",f.textContent="Right Button",r.appendChild(f),{page:n,menuMain:e,menuSub:a,imageHolder:i,imageBox:s,conveyerBelt:r,bottomSection:l,timeDisplay:d,backgroundDisplay:c,dropDownImage:t,dropDownColor:o,conveyerButton0:u,conveyerButton1:p,conveyerButton2:m,conveyerButton3:g,conveyerButton4:y,conveyerButtonLeft:A,conveyerButtonRight:f}}(),T=[],O=0,G=document.createElement("div"),Y=document.createElement("div"),N=document.createElement("div"),H=document.createElement("div"),R=document.createElement("div");G.classList.add("backgroundSquare"),Y.classList.add("backgroundSquare"),N.classList.add("backgroundSquare"),H.classList.add("backgroundSquare"),R.classList.add("backgroundSquare"),G.id="red",Y.id="green",N.id="blue",H.id="gold",R.id="silver",G.setAttribute("style","display: none"),C.appendChild(G),Y.setAttribute("style","display: none"),C.appendChild(Y),N.setAttribute("style","display: none"),C.appendChild(N),H.setAttribute("style","display: none"),C.appendChild(H),R.setAttribute("style","display: none"),C.appendChild(R);let U=document.querySelectorAll(".backgroundSquare"),J=document.createElement("input");J.type="file",J.id="0",C.appendChild(J),J.style.display="none";let V=document.createElement("input");V.type="file",V.id="1",C.appendChild(V),V.style.display="none";let W=document.createElement("input");W.type="file",W.id="2",C.appendChild(W),W.style.display="none";let Z=document.createElement("input");Z.type="file",Z.id="3",C.appendChild(Z),Z.style.display="none";let z=document.createElement("input");z.type="file",z.id="4",C.appendChild(z),z.style.display="none",J.classList.add("imageSquare"),V.classList.add("imageSquare"),W.classList.add("imageSquare"),Z.classList.add("imageSquare"),z.classList.add("imageSquare");let P=document.querySelectorAll(".imageSquare"),F=function(){if(localStorage.getItem("backgroundColor")){let n=localStorage.getItem("backgroundColor");return{oldColorParsed:JSON.parse(n)}}},Q=function(){if(localStorage.getItem("backgroundColorDisplayText")){let n=localStorage.getItem("backgroundColorDisplayText");return{oldColorTextParsed:JSON.parse(n)}}},X=function(){let n=new Date,e=n.getHours(),t=n.getMinutes();t<10&&(t="0"+t);let o=e+":"+t;E.textContent=o},$=function(){T[O]?O<4?(console.log(O),B.src=`${T[O]}`,O++):O>=4&&(console.log(O),B.src=`${T[O]}`,O=0):(console.log(O),B.src="../src/images/emptyimage.jpg",O<4?O++:O>=4&&(O=0))},K=function(){clearInterval(_),_=setInterval($,2e3)},_=(setInterval(X,6e3),setInterval($,3e3));F(),Q(),localStorage.getItem("backgroundColor")&&function(){let{oldColorParsed:n}=F();f.style.backgroundColor=n}(),localStorage.getItem("backgroundColorDisplayText")&&function(){let{oldColorTextParsed:n}=Q();v.textContent=n}(),X(),function(){if(localStorage.getItem("imageArray")){let n=localStorage.getItem("imageArray"),e=JSON.parse(n);T=e}}(),k.addEventListener("click",(()=>{U.forEach((n=>{"none"===n.style.display?(n.style.display="block",P.forEach((n=>{n.style.display="none"}))):n.style.display="none"}))})),x.addEventListener("click",(()=>{P.forEach((n=>{"none"===n.style.display?(n.style.display="block",U.forEach((n=>{n.style.display="none"}))):n.style.display="none"}))})),U.forEach((n=>{n.addEventListener("click",(function(n){f.style.backgroundColor=n.target.id,v.textContent=n.target.id,function(){let n=window.getComputedStyle(f).backgroundColor,e=JSON.stringify(n);localStorage.setItem("backgroundColor",e)}(),function(){let n=v.textContent,e=JSON.stringify(n);localStorage.setItem("backgroundColorDisplayText",e)}()}))})),P.forEach((n=>{n.addEventListener("change",(function(e){let t=new FileReader;t.readAsDataURL(n.files[0]),t.addEventListener("load",(()=>{let n=parseInt(e.target.id);T[n]=t.result,function(){let n=JSON.stringify(T);localStorage.setItem("imageArray",n)}(),console.log(T)}))}))})),q.addEventListener("click",(()=>{1===O?O=4:0===O?O=3:(O--,O--),$(),K()})),M.addEventListener("click",(()=>{$(),K()})),[w,S,L,D,j].forEach((n=>{n.addEventListener("click",(function(n){O=n.target.name,$(),K()}))}))}},n=>{n(n.s=914)}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,